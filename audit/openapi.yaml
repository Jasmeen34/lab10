openapi: 3.0.0
info:
  description: This API provides audit info
  version: "1.0.0"
  title: Audit API
  contact:
    email: jgill351@my.bcit.ca
paths:
  /reading/temperature:
    get:
      summary: gets a temperature reading from history
      operationId: app.get_temperature_reading
      description: Gets blood pressure readings from the event store
      parameters:
        - name: index
          in: query
          description: Gets the temeprature at the index in the event store
          schema:
            type: integer
            example: 100
      responses:
        '200':
          description: Successfully returned a temperature event
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/TemperatureReadings'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                   message:
                     type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                   message:
                     type: string
  /reading/co2readings:
    get:
      summary: gets a co2 reading from history
      operationId: app.get_co2_reading
      description: Gets co2 reading from the event store
      parameters:
        - name: index
          in: query
          description: Gets the co2 at the index in the event store
          schema:
            type: integer
            example: 100
      responses:
        '200':
          description: Successfully returned a co2 event
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/co2readings'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Not Found
components:
  schemas:
    TemperatureReadings:
      required:
      - date_time
      - greenhouse_id
      - humidity
      - soil_moisture
      - temperature_reading
      type: object
      properties:
        greenhouse_id:
          type: string
          format: uuid
        temperature_reading:
          type: integer
          example: 45
        humidity:
          type: integer
          example: 30
        soil_moisture:
          type: integer
          example: 40
        date_time:
          type: string
          format: date-time
    co2readings:
      required:
      - co2_readings
      - date_time
      - greenhouse_id
      - humidity
      - soil_moisture
      type: object
      properties:
        greenhouse_id:
          type: string
          format: uuid
        co2_readings:
          type: integer
          example: 45
        humidity:
          type: integer
          example: 30
        soil_moisture:
          type: integer
          example: 40
        date_time:
          type: string
          format: date-time
          example: 2016-08-29T09:12:33.001Z
