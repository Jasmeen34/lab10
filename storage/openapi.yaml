---
openapi: 3.0.0
info:
  title: greenshouse minitoring system
  description: API for the greenhouse monitoring system
  version: 1.0.0
servers:
- url: /
paths:
  /health:
    get:
      summary: gets the event stats
      operationId: app.health
      description: checks if the service is running
      responses:
        '200':
          description: The serivce is up and running
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /readings/temperature:
    get:
      tags:
        - devices
      summary: gets new temperature reading
      operationId: app.get_temperature_reading
      description: Gets temperature readings added after a timestamp
      parameters:
        - name: start_timestamp
          in: query
          description: Limits the number of items on a page
          schema:
            type: string
            format: date-time
            example: 2016-08-29T09:12:33.001Z
        - name: end_timestamp
          in: query
          description: Limits the number of items on a page
          schema:
            type: string
            format: date-time
            example: 2016-08-29T09:12:33.001Z
      responses:
        '200':
          description: Successfully returned a list of temperature events
          content:
             application/json:
                schema:
                  type: array
                  items:
                  $ref: '#/components/schemas/TemperatureReadings'
        '400':
          description: Invalid request
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
    post:
      tags:
      - devices
      summary: reports temperature readings
      description: Adds a new temperature reading to the system
      operationId: app.report_temperature_reading
      requestBody:
        description: Reading item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemperatureReadings'
      responses:
        "201":
          description: item created
        "400":
          description: invalid input, object invalid
  /readings/co2readings:
    get:
      tags:
        - devices
      summary: gets new co2 reading
      operationId: app.get_co2_reading
      description: Gets co2 readings added after a timestamp
      parameters:
        - name: start_timestamp
          in: query
          description: Limits the number of items on a page
          schema:
            type: string
            format: date-time
            example: 2016-08-29T09:12:33.001Z
        - name: end_timestamp
          in: query
          description: Limits the number of items on a page
          schema:
            type: string
            format: date-time
            example: 2016-08-29T09:12:33.001Z
      responses:
        '200':
          description: Successfully returned a list of temperature events
          content:
             application/json:
                schema:
                  type: array
                  items:
                  $ref: '#/components/schemas/co2readings'
        '400':
          description: Invalid request
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
    post:
      tags:
      - devices
      summary: reports co2 readings
      description: Adds a new co2 reading to the system
      operationId: app.report_co2_reading
      requestBody:
        description: Reading item to ad
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/co2readings'
      responses:
        "201":
          description: item created
        "400":
          description: invalid input, object invalid
components:
  schemas:
    TemperatureReadings:
      required:
      - date_time
      - greenhouse_id
      - humidity
      - soil_moisture
      - temperature_reading
      type: object
      properties:
        greenhouse_id:
          type: string
          format: uuid
        temperature_reading:
          type: integer
          example: 45
        humidity:
          type: integer
          example: 30
        soil_moisture:
          type: integer
          example: 40
        date_time:
          type: string
          format: string
    co2readings:
      required:
      - co2_readings
      - date_time
      - greenhouse_id
      - humidity
      - soil_moisture
      type: object
      properties:
        greenhouse_id:
          type: string
          format: uuid
        co2_readings:
          type: integer
          example: 45
        humidity:
          type: integer
          example: 30
        soil_moisture:
          type: integer
          example: 40
        date_time:
          type: string
          format: string
          example: 2016-08-29T09:12:33.001Z
